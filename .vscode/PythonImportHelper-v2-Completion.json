[
    {
        "label": "datetime",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "datetime",
        "description": "datetime",
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "WebDriverWait",
        "importPath": "selenium.webdriver.support.wait",
        "description": "selenium.webdriver.support.wait",
        "isExtraImport": true,
        "detail": "selenium.webdriver.support.wait",
        "documentation": {}
    },
    {
        "label": "expected_conditions",
        "importPath": "selenium.webdriver.support",
        "description": "selenium.webdriver.support",
        "isExtraImport": true,
        "detail": "selenium.webdriver.support",
        "documentation": {}
    },
    {
        "label": "Base",
        "importPath": "base.base_class",
        "description": "base.base_class",
        "isExtraImport": true,
        "detail": "base.base_class",
        "documentation": {}
    },
    {
        "label": "Base",
        "importPath": "base.base_class",
        "description": "base.base_class",
        "isExtraImport": true,
        "detail": "base.base_class",
        "documentation": {}
    },
    {
        "label": "Base",
        "importPath": "base.base_class",
        "description": "base.base_class",
        "isExtraImport": true,
        "detail": "base.base_class",
        "documentation": {}
    },
    {
        "label": "Base",
        "importPath": "base.base_class",
        "description": "base.base_class",
        "isExtraImport": true,
        "detail": "base.base_class",
        "documentation": {}
    },
    {
        "label": "Base",
        "importPath": "base.base_class",
        "description": "base.base_class",
        "isExtraImport": true,
        "detail": "base.base_class",
        "documentation": {}
    },
    {
        "label": "Base",
        "importPath": "base.base_class",
        "description": "base.base_class",
        "isExtraImport": true,
        "detail": "base.base_class",
        "documentation": {}
    },
    {
        "label": "Base",
        "importPath": "base.base_class",
        "description": "base.base_class",
        "isExtraImport": true,
        "detail": "base.base_class",
        "documentation": {}
    },
    {
        "label": "By",
        "importPath": "selenium.webdriver.common.by",
        "description": "selenium.webdriver.common.by",
        "isExtraImport": true,
        "detail": "selenium.webdriver.common.by",
        "documentation": {}
    },
    {
        "label": "By",
        "importPath": "selenium.webdriver.common.by",
        "description": "selenium.webdriver.common.by",
        "isExtraImport": true,
        "detail": "selenium.webdriver.common.by",
        "documentation": {}
    },
    {
        "label": "By",
        "importPath": "selenium.webdriver.common.by",
        "description": "selenium.webdriver.common.by",
        "isExtraImport": true,
        "detail": "selenium.webdriver.common.by",
        "documentation": {}
    },
    {
        "label": "By",
        "importPath": "selenium.webdriver.common.by",
        "description": "selenium.webdriver.common.by",
        "isExtraImport": true,
        "detail": "selenium.webdriver.common.by",
        "documentation": {}
    },
    {
        "label": "By",
        "importPath": "selenium.webdriver.common.by",
        "description": "selenium.webdriver.common.by",
        "isExtraImport": true,
        "detail": "selenium.webdriver.common.by",
        "documentation": {}
    },
    {
        "label": "time",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "time",
        "description": "time",
        "detail": "time",
        "documentation": {}
    },
    {
        "label": "HeaderComponent",
        "importPath": "components.header",
        "description": "components.header",
        "isExtraImport": true,
        "detail": "components.header",
        "documentation": {}
    },
    {
        "label": "MainComponent",
        "importPath": "components.main",
        "description": "components.main",
        "isExtraImport": true,
        "detail": "components.main",
        "documentation": {}
    },
    {
        "label": "CartPopupComponent",
        "importPath": "components.popup_cart",
        "description": "components.popup_cart",
        "isExtraImport": true,
        "detail": "components.popup_cart",
        "documentation": {}
    },
    {
        "label": "MainPage",
        "importPath": "pages.main_page",
        "description": "pages.main_page",
        "isExtraImport": true,
        "detail": "pages.main_page",
        "documentation": {}
    },
    {
        "label": "MainPage",
        "importPath": "pages.main_page",
        "description": "pages.main_page",
        "isExtraImport": true,
        "detail": "pages.main_page",
        "documentation": {}
    },
    {
        "label": "PageUrls",
        "importPath": "pages.page_urls",
        "description": "pages.page_urls",
        "isExtraImport": true,
        "detail": "pages.page_urls",
        "documentation": {}
    },
    {
        "label": "PageUrls",
        "importPath": "pages.page_urls",
        "description": "pages.page_urls",
        "isExtraImport": true,
        "detail": "pages.page_urls",
        "documentation": {}
    },
    {
        "label": "pytest",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "pytest",
        "description": "pytest",
        "detail": "pytest",
        "documentation": {}
    },
    {
        "label": "webdriver",
        "importPath": "selenium",
        "description": "selenium",
        "isExtraImport": true,
        "detail": "selenium",
        "documentation": {}
    },
    {
        "label": "Base",
        "kind": 6,
        "importPath": "base.base_class",
        "description": "base.base_class",
        "peekOfCode": "class Base:\n    \"\"\"Базовый класс, который содержит универсальные методы\"\"\"\n    def __init__(self, driver):\n        self.driver = driver\n    def get_current_url(self):\n        \"\"\"Метод получает текущий URL\"\"\"\n        current_url = self.driver.current_url\n        print(f\"Текущий URL - {current_url}\")\n        return current_url\n    def get_element(self, wait_time, locator):",
        "detail": "base.base_class",
        "documentation": {}
    },
    {
        "label": "BASE_DIR",
        "kind": 5,
        "importPath": "base.base_class",
        "description": "base.base_class",
        "peekOfCode": "BASE_DIR = \"/home/alex/VSCodeProjects/tyumen.blizko.ru/\"\nclass Base:\n    \"\"\"Базовый класс, который содержит универсальные методы\"\"\"\n    def __init__(self, driver):\n        self.driver = driver\n    def get_current_url(self):\n        \"\"\"Метод получает текущий URL\"\"\"\n        current_url = self.driver.current_url\n        print(f\"Текущий URL - {current_url}\")\n        return current_url",
        "detail": "base.base_class",
        "documentation": {}
    },
    {
        "label": "FooterComponentLocators",
        "kind": 6,
        "importPath": "components.footer",
        "description": "components.footer",
        "peekOfCode": "class FooterComponentLocators:\n    pass\nclass FooterComponent(Base):\n    pass",
        "detail": "components.footer",
        "documentation": {}
    },
    {
        "label": "FooterComponent",
        "kind": 6,
        "importPath": "components.footer",
        "description": "components.footer",
        "peekOfCode": "class FooterComponent(Base):\n    pass",
        "detail": "components.footer",
        "documentation": {}
    },
    {
        "label": "HeaderComponentLocators",
        "kind": 6,
        "importPath": "components.header",
        "description": "components.header",
        "peekOfCode": "class HeaderComponentLocators:\n    \"\"\"Класс содержит локаторы используемые для поиска элементов в компоненте заголовка\"\"\"\n    # Локаторы\n    LOCATOR_AUTH_BUTTON = (By.XPATH, '//*[@id=\"open-auth-popup\"]')\n    LOCATOR_MENU_BUTTON = (By.XPATH, \"/html/body/div[1]/div[2]/div/div[2]/button\")\n    LOCATOR_PUR_BUTTON = (By.XPATH, '//ul[@class=\"header-navigation-links\"]/li[0]')\n    LOCATOR_FAVORITE_BUTTON = (By.XPATH, '//ul[@class=\"header-navigation-links\"]/li[1]')\n    LOCATOR_CART_BUTTON = (By.XPATH, '//ul[@class=\"header-navigation-links\"]/li[3]')\n    LOCATOR_SEARCH_FIELD = (By.XPATH, '//input[@name=\"q\"]')\n    LOCATOR_SEARSH_BUTTON = (By.XPATH, \"//button[@class='header-search-form__submit']\")",
        "detail": "components.header",
        "documentation": {}
    },
    {
        "label": "HeaderComponent",
        "kind": 6,
        "importPath": "components.header",
        "description": "components.header",
        "peekOfCode": "class HeaderComponent(Base):\n    \"\"\"Класс компонента шапки страницы\"\"\"\n    # Геттеры\n    def get_login_button(self):\n        print(\"Получение локатора кнопки Войти\")\n        return self.get_element(20, HeaderComponentLocators.LOCATOR_AUTH_BUTTON)\n    def get_menu_button(self):\n        print(\"Получение локатора кнопки Меню\")\n        return self.get_element(20, HeaderComponentLocators.LOCATOR_MENU_BUTTON)\n    def get_cart_button(self):",
        "detail": "components.header",
        "documentation": {}
    },
    {
        "label": "MainComponentLocators",
        "kind": 6,
        "importPath": "components.main",
        "description": "components.main",
        "peekOfCode": "class MainComponentLocators:\n    \"\"\"Класс содержащий локаторы используемые на основном компаненте страницы\"\"\"\n    LOCATOR_PRODUCTS_LIST = (By.CLASS_NAME, \"centered-\")\n    LOCATOR_PRODUCT_ITEM = (By.CLASS_NAME, \"gallery-product-item\")\n    # LOCATOR_MARKET_BUTTON\n    LOCATOR_ADD_TO_CART_BUTTON = (\n        By.XPATH,\n        \"/html/body/div[1]/div[8]/div[2]/div[2]/div/div[2]/div/div/div/div/button\",\n    )\n    LOCATOR_GO_TO_CART_BUTTON = (By.LINK_TEXT, \"Корзина\")",
        "detail": "components.main",
        "documentation": {}
    },
    {
        "label": "MainComponent",
        "kind": 6,
        "importPath": "components.main",
        "description": "components.main",
        "peekOfCode": "class MainComponent(Base):\n    \"\"\"Класс основного компанента страницы\"\"\"\n    # Геттеры\n    def get_products_category_list(self):\n        \"\"\"Получение списка доступных категорий товаров\"\"\"\n        print(\"Получение списка категорий товаров в главной секции страницы\")\n        elements = self.get_elements(20, MainComponentLocators.LOCATOR_PRODUCTS_LIST)\n        return elements\n    def get_category(self, category):\n        \"\"\"Получение заданной категории товаров\"\"\"",
        "detail": "components.main",
        "documentation": {}
    },
    {
        "label": "CartPopupComponentLocators",
        "kind": 6,
        "importPath": "components.popup_cart",
        "description": "components.popup_cart",
        "peekOfCode": "class CartPopupComponentLocators:\n    \"\"\"Класс содержащий локаторы используемые на основном компаненте страницы\"\"\"\n    LOCATOR_POPUP_CART_CONFIRM_BUTTON = (\n        By.XPATH,\n        '//a[contains(text(), \"Перейти к оформлению\")]',\n    )  # (By.LINK_TEXT, \"Перейти к оформлению\")\n    LOCATOR_POPUP_CART_BACK_BUTTON = (\n        By.XPATH,\n        \"//span[contains(text(), 'Вернуться к покупкам')]\",\n    )",
        "detail": "components.popup_cart",
        "documentation": {}
    },
    {
        "label": "CartPopupComponent",
        "kind": 6,
        "importPath": "components.popup_cart",
        "description": "components.popup_cart",
        "peekOfCode": "class CartPopupComponent(Base):\n    \"\"\"Класс всплывающего окна корзины\"\"\"\n    # Геттеры\n    def get_popup_cart_confirm_button(self):\n        \"\"\"Получение кнопки для подтверждения заказа в магазиине\"\"\"\n        print(\"Получение кнопки подтверждения заказа\")\n        return self.get_element(\n            30, CartPopupComponentLocators.LOCATOR_POPUP_CART_CONFIRM_BUTTON\n        )\n    def get_popup_cart_back_button(self):",
        "detail": "components.popup_cart",
        "documentation": {}
    },
    {
        "label": "SidebarComponentLocators",
        "kind": 6,
        "importPath": "components.sidebar",
        "description": "components.sidebar",
        "peekOfCode": "class SidebarComponentLocators:\n    pass\nclass SidebarComponent(Base):\n    pass",
        "detail": "components.sidebar",
        "documentation": {}
    },
    {
        "label": "SidebarComponent",
        "kind": 6,
        "importPath": "components.sidebar",
        "description": "components.sidebar",
        "peekOfCode": "class SidebarComponent(Base):\n    pass",
        "detail": "components.sidebar",
        "documentation": {}
    },
    {
        "label": "CartPageLocators",
        "kind": 6,
        "importPath": "pages.cart_page",
        "description": "pages.cart_page",
        "peekOfCode": "class CartPageLocators:\n    \"\"\"Класс содержит локаторы которые используются на странице ояормления заказа\"\"\"\n    pass\nclass CartPage(Base):\n    \"\"\"Класс описывает страницу офрмления заказа\"\"\"\n    pass",
        "detail": "pages.cart_page",
        "documentation": {}
    },
    {
        "label": "CartPage",
        "kind": 6,
        "importPath": "pages.cart_page",
        "description": "pages.cart_page",
        "peekOfCode": "class CartPage(Base):\n    \"\"\"Класс описывает страницу офрмления заказа\"\"\"\n    pass",
        "detail": "pages.cart_page",
        "documentation": {}
    },
    {
        "label": "MainPageLocators",
        "kind": 6,
        "importPath": "pages.main_page",
        "description": "pages.main_page",
        "peekOfCode": "class MainPageLocators:\n    \"\"\"Класс содержит локаторы применяемые на главной странице\"\"\"\n    LOCATOR_AUTH_PHONE_FIELD = (By.NAME, \"phone\")\n    LOCATOR_AUTH_PASS_FIELD = (By.NAME, \"password\")\n    LOCATOR_AUTH_FORM_BUTTON = (By.CLASS_NAME, \"full-width-button\")\n    LOCATOR_PRODUCT_FULL_NAME = (\n        By.XPATH,\n        \"/html/body/div[1]/div[8]/div[1]/div/h1/span\",\n    )\nclass MainPage(Base):",
        "detail": "pages.main_page",
        "documentation": {}
    },
    {
        "label": "MainPage",
        "kind": 6,
        "importPath": "pages.main_page",
        "description": "pages.main_page",
        "peekOfCode": "class MainPage(Base):\n    \"\"\"Класс главной страницы\"\"\"\n    def __init__(self, driver):\n        super().__init__(driver)\n        # Создание компонентов страницы\n        self.header_component = HeaderComponent(driver)\n        self.main_component = MainComponent(driver)\n        self.cart_popup_component = CartPopupComponent(driver)\n    # Геттеры\n    def get_auth_phone_field(self):",
        "detail": "pages.main_page",
        "documentation": {}
    },
    {
        "label": "PageUrls",
        "kind": 6,
        "importPath": "pages.page_urls",
        "description": "pages.page_urls",
        "peekOfCode": "class PageUrls:\n    \"\"\"Класс содержит url страниц интернет магазина\"\"\"\n    # Главная страница магазина\n    URL_BASE_PAGE = \"https://tyumen.blizko.ru/\"\n    # URL Страниц магазина по категориям\n    URL_DIALS_PAGE = \"https://tyumen.blizko.ru/deals\"\n    URL_CONSTRUCTION_PAGE = \"https://tyumen.blizko.ru/predl/construction\"\n    URL_TEHNIKA_CATEGORY_PAGE = \"https://tyumen.blizko.ru/predl/promgood/tehnika\"\n    URL_COMPUTER_CATEGORY_PAGE = \"https://tyumen.blizko.ru/predl/computer/computer\"\n    URL_NOTEBOOK_CATEGORY_PAGE = (",
        "detail": "pages.page_urls",
        "documentation": {}
    },
    {
        "label": "test_open_main_page",
        "kind": 2,
        "importPath": "tests.test_main_page",
        "description": "tests.test_main_page",
        "peekOfCode": "def test_open_main_page(driver):\n    \"\"\"Тест на открытие главной страницы\"\"\"\n    mp = MainPage(driver)\n    # Переход на главную страницу\n    mp.go_to_base_url()\n    mp.assert_url(PageUrls.URL_BASE_PAGE)\ndef test_user_autentification(driver):\n    \"\"\"Тест аутентификации пользователя\"\"\"\n    mp = MainPage(driver)\n    # Переход на главную страницу",
        "detail": "tests.test_main_page",
        "documentation": {}
    },
    {
        "label": "test_user_autentification",
        "kind": 2,
        "importPath": "tests.test_main_page",
        "description": "tests.test_main_page",
        "peekOfCode": "def test_user_autentification(driver):\n    \"\"\"Тест аутентификации пользователя\"\"\"\n    mp = MainPage(driver)\n    # Переход на главную страницу\n    mp.go_to_base_url()\n    # Аутентификация пользователя\n    mp.autentification()\ndef test_main_menu(driver):\n    \"\"\"Тест кнопки главного меню\"\"\"\n    mp = MainPage(driver)",
        "detail": "tests.test_main_page",
        "documentation": {}
    },
    {
        "label": "test_main_menu",
        "kind": 2,
        "importPath": "tests.test_main_page",
        "description": "tests.test_main_page",
        "peekOfCode": "def test_main_menu(driver):\n    \"\"\"Тест кнопки главного меню\"\"\"\n    mp = MainPage(driver)\n    # Переход на главную страницу\n    mp.go_to_base_url()\n    # Переход на страницу главного меню\n    mp.go_to_main_menu()\ndef test_go_to_category_product(driver):\n    \"\"\"Тест перехода в категорию навигационного меню\"\"\"\n    mp = MainPage(driver)",
        "detail": "tests.test_main_page",
        "documentation": {}
    },
    {
        "label": "test_go_to_category_product",
        "kind": 2,
        "importPath": "tests.test_main_page",
        "description": "tests.test_main_page",
        "peekOfCode": "def test_go_to_category_product(driver):\n    \"\"\"Тест перехода в категорию навигационного меню\"\"\"\n    mp = MainPage(driver)\n    # Переход на главную страницу\n    mp.go_to_base_url()\n    # Аутентификация пользователя\n    mp.autentification()\n    # переход в категорию \"Одежда\"\n    mp.go_to_navbar_category(\"Одежда\")\ndef test_navbar(driver):",
        "detail": "tests.test_main_page",
        "documentation": {}
    },
    {
        "label": "test_navbar",
        "kind": 2,
        "importPath": "tests.test_main_page",
        "description": "tests.test_main_page",
        "peekOfCode": "def test_navbar(driver):\n    \"\"\"Тест навигационного меню главной страницы\"\"\"\n    mp = MainPage(driver)\n    # Переход на главную страницу\n    mp.go_to_base_url()\n    # Проверка навигационного бара\n    mp.check_navbar_links()",
        "detail": "tests.test_main_page",
        "documentation": {}
    },
    {
        "label": "test_buy_product",
        "kind": 2,
        "importPath": "tests.test_smoke",
        "description": "tests.test_smoke",
        "peekOfCode": "def test_buy_product(driver):\n    mp = MainPage(driver)\n    # Переход на главную страницу\n    mp.go_to_base_url()\n    mp.assert_url(PageUrls.URL_BASE_PAGE)\n    # Аутентификация пользователя\n    mp.autentification()\n    # переход в категорию \"Одежда\"\n    mp.go_to_navbar_category(\"Одежда\")\n    time.sleep(5)",
        "detail": "tests.test_smoke",
        "documentation": {}
    },
    {
        "label": "test_smoke",
        "kind": 2,
        "importPath": "tests.test_smoke",
        "description": "tests.test_smoke",
        "peekOfCode": "def test_smoke(driver):\n    mp = MainPage(driver)\n    # Переход на главную страницу\n    mp.go_to_base_url()\n    mp.assert_url(PageUrls.URL_BASE_PAGE)\n    # переход в категорию \"Техника\"\n    mp.go_to_navbar_category(\"Техника\")\n    time.sleep(5)\n    mp.assert_url(PageUrls.URL_TEHNIKA_CATEGORY_PAGE)\n    # переход в категорию \"Компьютеры\"",
        "detail": "tests.test_smoke",
        "documentation": {}
    },
    {
        "label": "driver",
        "kind": 2,
        "importPath": "conftest",
        "description": "conftest",
        "peekOfCode": "def driver():\n    options = webdriver.ChromeOptions()\n    options.add_argument(\"--start-maximized\")\n    options.add_argument(\"--disable-notifications\")\n    driver = webdriver.Chrome(options=options)\n    yield driver\n    driver.quit()",
        "detail": "conftest",
        "documentation": {}
    }
]